TimeQuest Timing Analyzer report for Lab6
Thu Nov 30 19:02:54 2023
Quartus II 32-bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clock'
 12. Slow Model Hold: 'clock'
 13. Slow Model Minimum Pulse Width: 'clock'
 14. Setup Times
 15. Hold Times
 16. Clock to Output Times
 17. Minimum Clock to Output Times
 18. Fast Model Setup Summary
 19. Fast Model Hold Summary
 20. Fast Model Recovery Summary
 21. Fast Model Removal Summary
 22. Fast Model Minimum Pulse Width Summary
 23. Fast Model Setup: 'clock'
 24. Fast Model Hold: 'clock'
 25. Fast Model Minimum Pulse Width: 'clock'
 26. Setup Times
 27. Hold Times
 28. Clock to Output Times
 29. Minimum Clock to Output Times
 30. Multicorner Timing Analysis Summary
 31. Setup Times
 32. Hold Times
 33. Clock to Output Times
 34. Minimum Clock to Output Times
 35. Setup Transfers
 36. Hold Transfers
 37. Report TCCS
 38. Report RSKM
 39. Unconstrained Paths
 40. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                       ;
+--------------------+--------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version ;
; Revision Name      ; Lab6                                                               ;
; Device Family      ; Cyclone II                                                         ;
; Device Name        ; EP2C35F672C6                                                       ;
; Timing Models      ; Final                                                              ;
; Delay Model        ; Combined                                                           ;
; Rise/Fall Delays   ; Unavailable                                                        ;
+--------------------+--------------------------------------------------------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 8           ;
; Maximum allowed            ; 4           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 2           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     Processor 1            ; 100.0%      ;
;     Processor 2            ; < 0.1%      ;
;     Processors 3-8         ;   0.0%      ;
+----------------------------+-------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                            ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets   ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------+
; clock      ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clock } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------+


+--------------------------------------------------+
; Slow Model Fmax Summary                          ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 114.71 MHz ; 114.71 MHz      ; clock      ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------+
; Slow Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clock ; -3.859 ; -35.845       ;
+-------+--------+---------------+


+-------------------------------+
; Slow Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clock ; 0.391 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clock ; -1.380 ; -39.380               ;
+-------+--------+-----------------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clock'                                                                                                               ;
+--------+--------------------------------+-------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                      ; To Node                 ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------------+-------------------------+--------------+-------------+--------------+------------+------------+
; -3.859 ; latch2:inst|Q[1]               ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.393      ;
; -3.813 ; latch2:inst8|Q[0]              ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.347      ;
; -3.775 ; latch2:inst|Q[0]               ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.309      ;
; -3.760 ; latch2:inst|Q[1]               ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.027      ; 4.323      ;
; -3.756 ; latch2:inst8|Q[1]              ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.290      ;
; -3.739 ; latch2:inst|Q[1]               ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.273      ;
; -3.722 ; latch2:inst8|Q[3]              ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.027      ; 4.285      ;
; -3.707 ; latch2:inst8|Q[0]              ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.027      ; 4.270      ;
; -3.704 ; latch2:inst|Q[1]               ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.005      ; 4.245      ;
; -3.692 ; latch2:inst|Q[1]               ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.005      ; 4.233      ;
; -3.669 ; latch2:inst|Q[2]               ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.203      ;
; -3.669 ; latch2:inst|Q[0]               ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.027      ; 4.232      ;
; -3.665 ; latch2:inst|Q[1]               ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.199      ;
; -3.650 ; latch2:inst8|Q[1]              ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.027      ; 4.213      ;
; -3.643 ; latch2:inst|Q[0]               ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.177      ;
; -3.639 ; latch2:inst8|Q[2]              ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.173      ;
; -3.615 ; latch2:inst8|Q[4]              ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.003     ; 4.148      ;
; -3.608 ; latch2:inst|Q[0]               ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.005      ; 4.149      ;
; -3.605 ; latch2:inst8|Q[3]              ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.139      ;
; -3.596 ; latch2:inst|Q[0]               ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.005      ; 4.137      ;
; -3.590 ; latch2:inst8|Q[0]              ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.124      ;
; -3.569 ; latch2:inst|Q[0]               ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.103      ;
; -3.563 ; latch2:inst|Q[2]               ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.027      ; 4.126      ;
; -3.555 ; latch2:inst8|Q[0]              ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.005      ; 4.096      ;
; -3.549 ; latch2:inst8|Q[3]              ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.083      ;
; -3.543 ; latch2:inst8|Q[0]              ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.005      ; 4.084      ;
; -3.533 ; latch2:inst8|Q[2]              ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.027      ; 4.096      ;
; -3.533 ; latch2:inst8|Q[1]              ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.067      ;
; -3.516 ; latch2:inst8|Q[4]              ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.026      ; 4.078      ;
; -3.503 ; latch2:inst8|Q[0]              ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.037      ;
; -3.502 ; latch2:inst|Q[2]               ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.036      ;
; -3.501 ; latch2:inst|Q[3]               ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.035      ;
; -3.495 ; latch2:inst8|Q[4]              ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.003     ; 4.028      ;
; -3.493 ; latch2:inst8|Q[1]              ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.005      ; 4.034      ;
; -3.481 ; latch2:inst|Q[4]               ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.015      ;
; -3.481 ; latch2:inst8|Q[1]              ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.005      ; 4.022      ;
; -3.473 ; latch2:inst8|Q[3]              ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 4.007      ;
; -3.468 ; latch2:inst|Q[3]               ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.027      ; 4.031      ;
; -3.467 ; latch2:inst|Q[2]               ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.005      ; 4.008      ;
; -3.460 ; latch2:inst8|Q[4]              ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.004      ; 4.000      ;
; -3.456 ; latch2:inst8|Q[2]              ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.990      ;
; -3.455 ; latch2:inst|Q[2]               ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.996      ;
; -3.448 ; latch2:inst8|Q[4]              ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.004      ; 3.988      ;
; -3.440 ; latch2:inst8|Q[1]              ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.974      ;
; -3.426 ; latch2:inst|Q[2]               ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.960      ;
; -3.421 ; latch2:inst8|Q[2]              ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.962      ;
; -3.415 ; latch2:inst8|Q[4]              ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.003     ; 3.948      ;
; -3.409 ; latch2:inst|Q[4]               ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.027      ; 3.972      ;
; -3.409 ; latch2:inst8|Q[2]              ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.950      ;
; -3.406 ; latch2:inst8|Q[5]              ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.940      ;
; -3.394 ; latch2:inst8|Q[3]              ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.935      ;
; -3.392 ; latch2:inst|Q[1]               ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.926      ;
; -3.382 ; latch2:inst8|Q[3]              ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.923      ;
; -3.381 ; latch2:inst|Q[3]               ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.915      ;
; -3.381 ; latch2:inst8|Q[3]              ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.915      ;
; -3.375 ; latch2:inst|Q[5]               ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.909      ;
; -3.369 ; latch2:inst8|Q[2]              ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.903      ;
; -3.364 ; latch2:inst8|Q[0]              ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.898      ;
; -3.363 ; latch2:inst8|Q[5]              ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.027      ; 3.926      ;
; -3.361 ; latch2:inst|Q[4]               ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.895      ;
; -3.346 ; latch2:inst|Q[3]               ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.887      ;
; -3.339 ; latch2:inst|Q[5]               ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.027      ; 3.902      ;
; -3.336 ; latch2:inst|Q[0]               ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.870      ;
; -3.334 ; latch2:inst8|Q[6]              ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.868      ;
; -3.334 ; latch2:inst|Q[3]               ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.875      ;
; -3.326 ; latch2:inst|Q[4]               ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.867      ;
; -3.314 ; latch2:inst|Q[4]               ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.855      ;
; -3.307 ; latch2:inst8|Q[1]              ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.841      ;
; -3.304 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 1.000        ; 0.029      ; 4.369      ;
; -3.303 ; latch2:inst|Q[3]               ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.837      ;
; -3.296 ; latch2:inst|Q[6]               ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.830      ;
; -3.286 ; latch2:inst8|Q[5]              ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.820      ;
; -3.283 ; latch2:inst|Q[4]               ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.817      ;
; -3.282 ; latch2:inst|Q[1]               ; ALUcore:inst1|RESULT[0] ; clock        ; clock       ; 0.500        ; 0.027      ; 3.845      ;
; -3.255 ; latch2:inst|Q[5]               ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.789      ;
; -3.251 ; latch2:inst8|Q[5]              ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.792      ;
; -3.239 ; latch2:inst8|Q[5]              ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.780      ;
; -3.235 ; latch2:inst8|Q[6]              ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.027      ; 3.798      ;
; -3.229 ; latch2:inst|Q[2]               ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.763      ;
; -3.224 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 1.000        ; 0.000      ; 4.260      ;
; -3.220 ; latch2:inst|Q[5]               ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.761      ;
; -3.214 ; latch2:inst8|Q[6]              ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.748      ;
; -3.208 ; latch2:inst|Q[5]               ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.749      ;
; -3.197 ; latch2:inst|Q[6]               ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.027      ; 3.760      ;
; -3.191 ; latch2:inst8|Q[2]              ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.725      ;
; -3.186 ; latch2:inst|Q[0]               ; ALUcore:inst1|RESULT[0] ; clock        ; clock       ; 0.500        ; 0.027      ; 3.749      ;
; -3.179 ; latch2:inst8|Q[6]              ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.720      ;
; -3.176 ; latch2:inst|Q[6]               ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.710      ;
; -3.167 ; latch2:inst8|Q[6]              ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.708      ;
; -3.148 ; latch2:inst8|Q[4]              ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.003     ; 3.681      ;
; -3.141 ; latch2:inst|Q[6]               ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.682      ;
; -3.133 ; latch2:inst|Q[3]               ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.667      ;
; -3.133 ; latch2:inst8|Q[0]              ; ALUcore:inst1|RESULT[0] ; clock        ; clock       ; 0.500        ; 0.027      ; 3.696      ;
; -3.129 ; latch2:inst|Q[6]               ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.005      ; 3.670      ;
; -3.113 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 1.000        ; 0.000      ; 4.149      ;
; -3.108 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 1.000        ; 0.007      ; 4.151      ;
; -3.097 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 1.000        ; -0.022     ; 4.111      ;
; -3.076 ; latch2:inst8|Q[5]              ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 3.610      ;
; -3.071 ; latch2:inst8|Q[1]              ; ALUcore:inst1|RESULT[0] ; clock        ; clock       ; 0.500        ; 0.027      ; 3.634      ;
; -3.064 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 1.000        ; -0.022     ; 4.078      ;
+--------+--------------------------------+-------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clock'                                                                                                                      ;
+-------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                      ; To Node                        ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; 0.391 ; ALUcore:inst1|NEG              ; ALUcore:inst1|NEG              ; clock        ; clock       ; 0.000        ; 0.000      ; 0.657      ;
; 0.544 ; machine:inst2|yfsm.s0          ; machine:inst2|yfsm.s1          ; clock        ; clock       ; 0.000        ; 0.000      ; 0.810      ;
; 0.562 ; machine:inst2|yfsm.s2          ; machine:inst2|yfsm.s3          ; clock        ; clock       ; 0.000        ; 0.000      ; 0.828      ;
; 0.569 ; machine:inst2|yfsm.s1          ; machine:inst2|yfsm.s2          ; clock        ; clock       ; 0.000        ; 0.000      ; 0.835      ;
; 0.663 ; machine:inst2|yfsm.s8          ; machine:inst2|yfsm.s0          ; clock        ; clock       ; 0.000        ; 0.000      ; 0.929      ;
; 0.681 ; machine:inst2|yfsm.s6          ; machine:inst2|yfsm.s7          ; clock        ; clock       ; 0.000        ; 0.000      ; 0.947      ;
; 0.715 ; machine:inst2|yfsm.s4          ; machine:inst2|current_state[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.981      ;
; 0.802 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[0]        ; clock        ; clock       ; 0.000        ; 0.000      ; 1.068      ;
; 0.817 ; machine:inst2|current_state[0] ; ALUcore:inst1|NEG              ; clock        ; clock       ; 0.000        ; 0.000      ; 1.083      ;
; 0.837 ; machine:inst2|yfsm.s5          ; machine:inst2|yfsm.s6          ; clock        ; clock       ; 0.000        ; 0.000      ; 1.103      ;
; 0.850 ; machine:inst2|yfsm.s4          ; machine:inst2|yfsm.s5          ; clock        ; clock       ; 0.000        ; 0.000      ; 1.116      ;
; 0.882 ; machine:inst2|yfsm.s3          ; machine:inst2|yfsm.s4          ; clock        ; clock       ; 0.000        ; 0.000      ; 1.148      ;
; 1.034 ; machine:inst2|yfsm.s5          ; machine:inst2|current_state[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.300      ;
; 1.077 ; machine:inst2|yfsm.s7          ; machine:inst2|current_state[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.343      ;
; 1.094 ; machine:inst2|yfsm.s7          ; machine:inst2|yfsm.s8          ; clock        ; clock       ; 0.000        ; 0.000      ; 1.360      ;
; 1.108 ; machine:inst2|yfsm.s1          ; machine:inst2|current_state[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.374      ;
; 1.229 ; machine:inst2|yfsm.s8          ; machine:inst2|yfsm.s8          ; clock        ; clock       ; 0.000        ; 0.000      ; 1.495      ;
; 1.246 ; machine:inst2|current_state[1] ; ALUcore:inst1|NEG              ; clock        ; clock       ; 0.000        ; 0.000      ; 1.512      ;
; 1.258 ; machine:inst2|yfsm.s6          ; machine:inst2|current_state[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.524      ;
; 1.278 ; machine:inst2|yfsm.s3          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.544      ;
; 1.366 ; machine:inst2|yfsm.s5          ; machine:inst2|current_state[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.632      ;
; 1.377 ; machine:inst2|yfsm.s2          ; machine:inst2|current_state[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.643      ;
; 1.389 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[0]        ; clock        ; clock       ; 0.000        ; 0.029      ; 1.684      ;
; 1.404 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[6]        ; clock        ; clock       ; 0.000        ; 0.000      ; 1.670      ;
; 1.479 ; machine:inst2|yfsm.s4          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.745      ;
; 1.488 ; machine:inst2|yfsm.s3          ; machine:inst2|current_state[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.754      ;
; 1.491 ; machine:inst2|yfsm.s7          ; machine:inst2|current_state[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.757      ;
; 1.504 ; machine:inst2|yfsm.s5          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.770      ;
; 1.505 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[6]        ; clock        ; clock       ; 0.000        ; 0.000      ; 1.771      ;
; 1.505 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[6]        ; clock        ; clock       ; 0.000        ; 0.029      ; 1.800      ;
; 1.531 ; machine:inst2|yfsm.s3          ; machine:inst2|current_state[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.797      ;
; 1.535 ; machine:inst2|yfsm.s6          ; machine:inst2|current_state[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.801      ;
; 1.551 ; machine:inst2|current_state[2] ; ALUcore:inst1|NEG              ; clock        ; clock       ; 0.000        ; 0.000      ; 1.817      ;
; 1.554 ; machine:inst2|yfsm.s1          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.820      ;
; 1.555 ; machine:inst2|yfsm.s7          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.821      ;
; 1.591 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[4]        ; clock        ; clock       ; 0.000        ; 0.000      ; 1.857      ;
; 1.613 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[6]        ; clock        ; clock       ; 0.000        ; 0.000      ; 1.879      ;
; 1.648 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[1]        ; clock        ; clock       ; 0.000        ; 0.007      ; 1.921      ;
; 1.680 ; machine:inst2|yfsm.s7          ; machine:inst2|current_state[3] ; clock        ; clock       ; 0.000        ; -0.029     ; 1.917      ;
; 1.730 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[4]        ; clock        ; clock       ; 0.000        ; -0.029     ; 1.967      ;
; 1.778 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[0]        ; clock        ; clock       ; 0.000        ; 0.000      ; 2.044      ;
; 1.791 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[7]        ; clock        ; clock       ; 0.000        ; -0.029     ; 2.028      ;
; 1.794 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[3]        ; clock        ; clock       ; 0.000        ; -0.029     ; 2.031      ;
; 1.806 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[0]        ; clock        ; clock       ; 0.000        ; 0.000      ; 2.072      ;
; 1.815 ; machine:inst2|yfsm.s8          ; machine:inst2|current_state[3] ; clock        ; clock       ; 0.000        ; -0.029     ; 2.052      ;
; 1.818 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[5]        ; clock        ; clock       ; 0.000        ; -0.029     ; 2.055      ;
; 1.821 ; machine:inst2|yfsm.s6          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.087      ;
; 1.874 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[4]        ; clock        ; clock       ; 0.000        ; -0.029     ; 2.111      ;
; 1.886 ; latch2:inst8|Q[7]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.027      ; 1.679      ;
; 1.901 ; machine:inst2|current_state[3] ; ALUcore:inst1|NEG              ; clock        ; clock       ; 0.000        ; 0.029      ; 2.196      ;
; 1.929 ; machine:inst2|yfsm.s2          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.195      ;
; 1.937 ; machine:inst2|yfsm.s0          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.203      ;
; 1.952 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[2]        ; clock        ; clock       ; 0.000        ; -0.022     ; 2.196      ;
; 1.955 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[1]        ; clock        ; clock       ; 0.000        ; -0.022     ; 2.199      ;
; 1.956 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[5]        ; clock        ; clock       ; 0.000        ; -0.029     ; 2.193      ;
; 2.001 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[4]        ; clock        ; clock       ; 0.000        ; -0.029     ; 2.238      ;
; 2.017 ; latch2:inst8|Q[3]              ; ALUcore:inst1|RESULT[3]        ; clock        ; clock       ; -0.500       ; -0.002     ; 1.781      ;
; 2.083 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[7]        ; clock        ; clock       ; 0.000        ; -0.029     ; 2.320      ;
; 2.096 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[7]        ; clock        ; clock       ; 0.000        ; 0.000      ; 2.362      ;
; 2.099 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[3]        ; clock        ; clock       ; 0.000        ; 0.000      ; 2.365      ;
; 2.123 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[5]        ; clock        ; clock       ; 0.000        ; 0.000      ; 2.389      ;
; 2.126 ; latch2:inst|Q[7]               ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.027      ; 1.919      ;
; 2.174 ; latch2:inst|Q[3]               ; ALUcore:inst1|RESULT[3]        ; clock        ; clock       ; -0.500       ; -0.002     ; 1.938      ;
; 2.219 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[3]        ; clock        ; clock       ; 0.000        ; -0.029     ; 2.456      ;
; 2.230 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[7]        ; clock        ; clock       ; 0.000        ; -0.029     ; 2.467      ;
; 2.237 ; latch2:inst|Q[6]               ; ALUcore:inst1|RESULT[6]        ; clock        ; clock       ; -0.500       ; 0.027      ; 2.030      ;
; 2.243 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[5]        ; clock        ; clock       ; 0.000        ; -0.029     ; 2.480      ;
; 2.257 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[2]        ; clock        ; clock       ; 0.000        ; 0.007      ; 2.530      ;
; 2.320 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[1]        ; clock        ; clock       ; 0.000        ; -0.022     ; 2.564      ;
; 2.334 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[1]        ; clock        ; clock       ; 0.000        ; -0.022     ; 2.578      ;
; 2.354 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[3]        ; clock        ; clock       ; 0.000        ; -0.029     ; 2.591      ;
; 2.480 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[2]        ; clock        ; clock       ; 0.000        ; -0.022     ; 2.724      ;
; 2.495 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[2]        ; clock        ; clock       ; 0.000        ; -0.022     ; 2.739      ;
; 2.524 ; latch2:inst|Q[2]               ; ALUcore:inst1|RESULT[2]        ; clock        ; clock       ; -0.500       ; 0.005      ; 2.295      ;
; 2.537 ; latch2:inst|Q[4]               ; ALUcore:inst1|RESULT[4]        ; clock        ; clock       ; -0.500       ; -0.002     ; 2.301      ;
; 2.543 ; latch2:inst|Q[6]               ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.027      ; 2.336      ;
; 2.581 ; latch2:inst8|Q[6]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.027      ; 2.374      ;
; 2.591 ; latch2:inst8|Q[7]              ; ALUcore:inst1|RESULT[7]        ; clock        ; clock       ; -0.500       ; -0.002     ; 2.355      ;
; 2.622 ; latch2:inst|Q[5]               ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.027      ; 2.415      ;
; 2.649 ; latch2:inst|Q[5]               ; ALUcore:inst1|RESULT[5]        ; clock        ; clock       ; -0.500       ; -0.002     ; 2.413      ;
; 2.653 ; latch2:inst8|Q[5]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.027      ; 2.446      ;
; 2.677 ; latch2:inst|Q[1]               ; ALUcore:inst1|RESULT[1]        ; clock        ; clock       ; -0.500       ; 0.005      ; 2.448      ;
; 2.697 ; latch2:inst8|Q[2]              ; ALUcore:inst1|RESULT[2]        ; clock        ; clock       ; -0.500       ; 0.005      ; 2.468      ;
; 2.702 ; latch2:inst|Q[7]               ; ALUcore:inst1|RESULT[7]        ; clock        ; clock       ; -0.500       ; -0.002     ; 2.466      ;
; 2.728 ; latch2:inst|Q[4]               ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.027      ; 2.521      ;
; 2.748 ; latch2:inst|Q[3]               ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.027      ; 2.541      ;
; 2.759 ; latch2:inst|Q[0]               ; ALUcore:inst1|RESULT[0]        ; clock        ; clock       ; -0.500       ; 0.027      ; 2.552      ;
; 2.776 ; latch2:inst8|Q[1]              ; ALUcore:inst1|RESULT[1]        ; clock        ; clock       ; -0.500       ; 0.005      ; 2.547      ;
; 2.796 ; latch2:inst8|Q[3]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.027      ; 2.589      ;
; 2.823 ; latch2:inst8|Q[2]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.027      ; 2.616      ;
; 2.832 ; latch2:inst8|Q[7]              ; ALUcore:inst1|RESULT[0]        ; clock        ; clock       ; -0.500       ; 0.027      ; 2.625      ;
; 2.862 ; latch2:inst8|Q[4]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.026      ; 2.654      ;
; 2.869 ; latch2:inst|Q[2]               ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.027      ; 2.662      ;
; 2.895 ; latch2:inst8|Q[1]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.027      ; 2.688      ;
; 2.921 ; latch2:inst8|Q[5]              ; ALUcore:inst1|RESULT[5]        ; clock        ; clock       ; -0.500       ; -0.002     ; 2.685      ;
; 2.942 ; latch2:inst8|Q[7]              ; ALUcore:inst1|RESULT[4]        ; clock        ; clock       ; -0.500       ; -0.002     ; 2.706      ;
; 2.945 ; latch2:inst8|Q[0]              ; ALUcore:inst1|RESULT[0]        ; clock        ; clock       ; -0.500       ; 0.027      ; 2.738      ;
; 2.957 ; latch2:inst8|Q[0]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.027      ; 2.750      ;
; 3.010 ; latch2:inst|Q[0]               ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.027      ; 2.803      ;
; 3.072 ; latch2:inst|Q[7]               ; ALUcore:inst1|RESULT[0]        ; clock        ; clock       ; -0.500       ; 0.027      ; 2.865      ;
+-------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clock'                                                                         ;
+--------+--------------+----------------+------------------+-------+------------+--------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                         ;
+--------+--------------+----------------+------------------+-------+------------+--------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clock ; Rise       ; clock                          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|NEG              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|NEG              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[0]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[0]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[1]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[1]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[2]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[2]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[3]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[3]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[4]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[4]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[5]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[5]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[6]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[6]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[7]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[7]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[0]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[0]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[1]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[1]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[2]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[2]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[3]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[3]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[4]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[4]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[5]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[5]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[6]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[6]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[7]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[7]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|current_state[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|current_state[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|current_state[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|current_state[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|current_state[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|current_state[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|current_state[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|current_state[3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s0          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s0          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s1          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s1          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s2          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s2          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s3          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s3          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s4          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s4          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s5          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s5          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s6          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s6          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s7          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s7          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s8          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s8          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock|combout                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock|combout                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock~clkctrl|inclk[0]         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock~clkctrl|inclk[0]         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock~clkctrl|outclk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock~clkctrl|outclk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|NEG|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|NEG|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|RESULT[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|RESULT[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|RESULT[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|RESULT[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|RESULT[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|RESULT[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|RESULT[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[7]|clk            ;
+--------+--------------+----------------+------------------+-------+------------+--------------------------------+


+------------------------------------------------------------------------------+
; Setup Times                                                                  ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; Enable_Decoder ; clock      ; 6.836  ; 6.836  ; Rise       ; clock           ;
; FSM_reset      ; clock      ; 1.193  ; 1.193  ; Rise       ; clock           ;
; data_in        ; clock      ; 6.139  ; 6.139  ; Rise       ; clock           ;
; A[*]           ; clock      ; 1.200  ; 1.200  ; Fall       ; clock           ;
;  A[0]          ; clock      ; 0.609  ; 0.609  ; Fall       ; clock           ;
;  A[1]          ; clock      ; -0.483 ; -0.483 ; Fall       ; clock           ;
;  A[2]          ; clock      ; -0.482 ; -0.482 ; Fall       ; clock           ;
;  A[3]          ; clock      ; -0.703 ; -0.703 ; Fall       ; clock           ;
;  A[4]          ; clock      ; -0.701 ; -0.701 ; Fall       ; clock           ;
;  A[5]          ; clock      ; 1.200  ; 1.200  ; Fall       ; clock           ;
;  A[6]          ; clock      ; 0.825  ; 0.825  ; Fall       ; clock           ;
;  A[7]          ; clock      ; 0.970  ; 0.970  ; Fall       ; clock           ;
; b[*]           ; clock      ; 4.856  ; 4.856  ; Fall       ; clock           ;
;  b[0]          ; clock      ; 0.651  ; 0.651  ; Fall       ; clock           ;
;  b[1]          ; clock      ; 1.075  ; 1.075  ; Fall       ; clock           ;
;  b[2]          ; clock      ; 0.883  ; 0.883  ; Fall       ; clock           ;
;  b[3]          ; clock      ; 4.695  ; 4.695  ; Fall       ; clock           ;
;  b[4]          ; clock      ; 4.856  ; 4.856  ; Fall       ; clock           ;
;  b[5]          ; clock      ; 4.828  ; 4.828  ; Fall       ; clock           ;
;  b[6]          ; clock      ; 4.757  ; 4.757  ; Fall       ; clock           ;
;  b[7]          ; clock      ; 4.818  ; 4.818  ; Fall       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Hold Times                                                                   ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; Enable_Decoder ; clock      ; -4.637 ; -4.637 ; Rise       ; clock           ;
; FSM_reset      ; clock      ; -0.700 ; -0.700 ; Rise       ; clock           ;
; data_in        ; clock      ; -5.045 ; -5.045 ; Rise       ; clock           ;
; A[*]           ; clock      ; 0.933  ; 0.933  ; Fall       ; clock           ;
;  A[0]          ; clock      ; -0.379 ; -0.379 ; Fall       ; clock           ;
;  A[1]          ; clock      ; 0.713  ; 0.713  ; Fall       ; clock           ;
;  A[2]          ; clock      ; 0.712  ; 0.712  ; Fall       ; clock           ;
;  A[3]          ; clock      ; 0.933  ; 0.933  ; Fall       ; clock           ;
;  A[4]          ; clock      ; 0.931  ; 0.931  ; Fall       ; clock           ;
;  A[5]          ; clock      ; -0.970 ; -0.970 ; Fall       ; clock           ;
;  A[6]          ; clock      ; -0.595 ; -0.595 ; Fall       ; clock           ;
;  A[7]          ; clock      ; -0.740 ; -0.740 ; Fall       ; clock           ;
; b[*]           ; clock      ; -0.421 ; -0.421 ; Fall       ; clock           ;
;  b[0]          ; clock      ; -0.421 ; -0.421 ; Fall       ; clock           ;
;  b[1]          ; clock      ; -0.845 ; -0.845 ; Fall       ; clock           ;
;  b[2]          ; clock      ; -0.653 ; -0.653 ; Fall       ; clock           ;
;  b[3]          ; clock      ; -4.465 ; -4.465 ; Fall       ; clock           ;
;  b[4]          ; clock      ; -4.626 ; -4.626 ; Fall       ; clock           ;
;  b[5]          ; clock      ; -4.598 ; -4.598 ; Fall       ; clock           ;
;  b[6]          ; clock      ; -4.527 ; -4.527 ; Fall       ; clock           ;
;  b[7]          ; clock      ; -4.588 ; -4.588 ; Fall       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Clock to Output Times                                                          ;
+------------------+------------+--------+--------+------------+-----------------+
; Data Port        ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------------+------------+--------+--------+------------+-----------------+
; AOUT[*]          ; clock      ; 6.609  ; 6.609  ; Rise       ; clock           ;
;  AOUT[0]         ; clock      ; 6.381  ; 6.381  ; Rise       ; clock           ;
;  AOUT[1]         ; clock      ; 6.554  ; 6.554  ; Rise       ; clock           ;
;  AOUT[2]         ; clock      ; 6.559  ; 6.559  ; Rise       ; clock           ;
;  AOUT[3]         ; clock      ; 6.609  ; 6.609  ; Rise       ; clock           ;
; BOUT[*]          ; clock      ; 8.559  ; 8.559  ; Rise       ; clock           ;
;  BOUT[0]         ; clock      ; 7.620  ; 7.620  ; Rise       ; clock           ;
;  BOUT[1]         ; clock      ; 8.559  ; 8.559  ; Rise       ; clock           ;
;  BOUT[2]         ; clock      ; 7.317  ; 7.317  ; Rise       ; clock           ;
;  BOUT[3]         ; clock      ; 7.057  ; 7.057  ; Rise       ; clock           ;
; CUROUT[*]        ; clock      ; 6.862  ; 6.862  ; Rise       ; clock           ;
;  CUROUT[0]       ; clock      ; 6.638  ; 6.638  ; Rise       ; clock           ;
;  CUROUT[1]       ; clock      ; 6.401  ; 6.401  ; Rise       ; clock           ;
;  CUROUT[2]       ; clock      ; 6.862  ; 6.862  ; Rise       ; clock           ;
;  CUROUT[3]       ; clock      ; 6.596  ; 6.596  ; Rise       ; clock           ;
; NEGOUT           ; clock      ; 9.320  ; 9.320  ; Rise       ; clock           ;
; R_First_Four[*]  ; clock      ; 9.552  ; 9.552  ; Rise       ; clock           ;
;  R_First_Four[0] ; clock      ; 9.552  ; 9.552  ; Rise       ; clock           ;
;  R_First_Four[1] ; clock      ; 9.504  ; 9.504  ; Rise       ; clock           ;
;  R_First_Four[2] ; clock      ; 9.108  ; 9.108  ; Rise       ; clock           ;
;  R_First_Four[3] ; clock      ; 9.063  ; 9.063  ; Rise       ; clock           ;
;  R_First_Four[4] ; clock      ; 9.117  ; 9.117  ; Rise       ; clock           ;
;  R_First_Four[5] ; clock      ; 9.352  ; 9.352  ; Rise       ; clock           ;
;  R_First_Four[6] ; clock      ; 9.368  ; 9.368  ; Rise       ; clock           ;
; R_Last_Four[*]   ; clock      ; 8.268  ; 8.268  ; Rise       ; clock           ;
;  R_Last_Four[0]  ; clock      ; 8.268  ; 8.268  ; Rise       ; clock           ;
;  R_Last_Four[1]  ; clock      ; 8.201  ; 8.201  ; Rise       ; clock           ;
;  R_Last_Four[2]  ; clock      ; 8.215  ; 8.215  ; Rise       ; clock           ;
;  R_Last_Four[3]  ; clock      ; 7.934  ; 7.934  ; Rise       ; clock           ;
;  R_Last_Four[4]  ; clock      ; 7.936  ; 7.936  ; Rise       ; clock           ;
;  R_Last_Four[5]  ; clock      ; 7.949  ; 7.949  ; Rise       ; clock           ;
;  R_Last_Four[6]  ; clock      ; 7.970  ; 7.970  ; Rise       ; clock           ;
; Sign[*]          ; clock      ; 8.493  ; 8.493  ; Rise       ; clock           ;
;  Sign[6]         ; clock      ; 8.493  ; 8.493  ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 11.453 ; 11.453 ; Rise       ; clock           ;
;  student_id[0]   ; clock      ; 10.826 ; 10.826 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 11.116 ; 11.116 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 11.376 ; 11.376 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 11.453 ; 11.453 ; Rise       ; clock           ;
;  student_id[5]   ; clock      ; 8.741  ; 8.741  ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 10.255 ; 10.255 ; Rise       ; clock           ;
+------------------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                  ;
+------------------+------------+--------+--------+------------+-----------------+
; Data Port        ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------------+------------+--------+--------+------------+-----------------+
; AOUT[*]          ; clock      ; 6.381  ; 6.381  ; Rise       ; clock           ;
;  AOUT[0]         ; clock      ; 6.381  ; 6.381  ; Rise       ; clock           ;
;  AOUT[1]         ; clock      ; 6.554  ; 6.554  ; Rise       ; clock           ;
;  AOUT[2]         ; clock      ; 6.559  ; 6.559  ; Rise       ; clock           ;
;  AOUT[3]         ; clock      ; 6.609  ; 6.609  ; Rise       ; clock           ;
; BOUT[*]          ; clock      ; 7.057  ; 7.057  ; Rise       ; clock           ;
;  BOUT[0]         ; clock      ; 7.620  ; 7.620  ; Rise       ; clock           ;
;  BOUT[1]         ; clock      ; 8.559  ; 8.559  ; Rise       ; clock           ;
;  BOUT[2]         ; clock      ; 7.317  ; 7.317  ; Rise       ; clock           ;
;  BOUT[3]         ; clock      ; 7.057  ; 7.057  ; Rise       ; clock           ;
; CUROUT[*]        ; clock      ; 6.401  ; 6.401  ; Rise       ; clock           ;
;  CUROUT[0]       ; clock      ; 6.638  ; 6.638  ; Rise       ; clock           ;
;  CUROUT[1]       ; clock      ; 6.401  ; 6.401  ; Rise       ; clock           ;
;  CUROUT[2]       ; clock      ; 6.862  ; 6.862  ; Rise       ; clock           ;
;  CUROUT[3]       ; clock      ; 6.596  ; 6.596  ; Rise       ; clock           ;
; NEGOUT           ; clock      ; 9.320  ; 9.320  ; Rise       ; clock           ;
; R_First_Four[*]  ; clock      ; 8.302  ; 8.302  ; Rise       ; clock           ;
;  R_First_Four[0] ; clock      ; 8.789  ; 8.789  ; Rise       ; clock           ;
;  R_First_Four[1] ; clock      ; 8.744  ; 8.744  ; Rise       ; clock           ;
;  R_First_Four[2] ; clock      ; 8.317  ; 8.317  ; Rise       ; clock           ;
;  R_First_Four[3] ; clock      ; 8.302  ; 8.302  ; Rise       ; clock           ;
;  R_First_Four[4] ; clock      ; 8.361  ; 8.361  ; Rise       ; clock           ;
;  R_First_Four[5] ; clock      ; 8.556  ; 8.556  ; Rise       ; clock           ;
;  R_First_Four[6] ; clock      ; 8.608  ; 8.608  ; Rise       ; clock           ;
; R_Last_Four[*]   ; clock      ; 7.133  ; 7.133  ; Rise       ; clock           ;
;  R_Last_Four[0]  ; clock      ; 7.531  ; 7.531  ; Rise       ; clock           ;
;  R_Last_Four[1]  ; clock      ; 7.463  ; 7.463  ; Rise       ; clock           ;
;  R_Last_Four[2]  ; clock      ; 7.479  ; 7.479  ; Rise       ; clock           ;
;  R_Last_Four[3]  ; clock      ; 7.133  ; 7.133  ; Rise       ; clock           ;
;  R_Last_Four[4]  ; clock      ; 7.136  ; 7.136  ; Rise       ; clock           ;
;  R_Last_Four[5]  ; clock      ; 7.237  ; 7.237  ; Rise       ; clock           ;
;  R_Last_Four[6]  ; clock      ; 7.237  ; 7.237  ; Rise       ; clock           ;
; Sign[*]          ; clock      ; 8.493  ; 8.493  ; Rise       ; clock           ;
;  Sign[6]         ; clock      ; 8.493  ; 8.493  ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 8.460  ; 8.460  ; Rise       ; clock           ;
;  student_id[0]   ; clock      ; 8.897  ; 8.897  ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 9.965  ; 9.965  ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 10.224 ; 10.224 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 10.302 ; 10.302 ; Rise       ; clock           ;
;  student_id[5]   ; clock      ; 8.460  ; 8.460  ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 8.888  ; 8.888  ; Rise       ; clock           ;
+------------------+------------+--------+--------+------------+-----------------+


+--------------------------------+
; Fast Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clock ; -1.411 ; -11.192       ;
+-------+--------+---------------+


+-------------------------------+
; Fast Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clock ; 0.215 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clock ; -1.380 ; -39.380               ;
+-------+--------+-----------------------+


+----------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clock'                                                                                                  ;
+--------+-------------------+-------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node                 ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+-------------------------+--------------+-------------+--------------+------------+------------+
; -1.411 ; latch2:inst|Q[1]  ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.941      ;
; -1.369 ; latch2:inst|Q[0]  ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.899      ;
; -1.364 ; latch2:inst|Q[1]  ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.894      ;
; -1.359 ; latch2:inst|Q[1]  ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.913      ;
; -1.351 ; latch2:inst8|Q[0] ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.881      ;
; -1.342 ; latch2:inst|Q[1]  ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.877      ;
; -1.332 ; latch2:inst|Q[1]  ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.867      ;
; -1.324 ; latch2:inst8|Q[0] ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.878      ;
; -1.322 ; latch2:inst|Q[0]  ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.852      ;
; -1.322 ; latch2:inst8|Q[1] ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.852      ;
; -1.319 ; latch2:inst8|Q[3] ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.873      ;
; -1.317 ; latch2:inst|Q[0]  ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.871      ;
; -1.304 ; latch2:inst8|Q[0] ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.834      ;
; -1.300 ; latch2:inst|Q[2]  ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.830      ;
; -1.300 ; latch2:inst|Q[0]  ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.835      ;
; -1.297 ; latch2:inst8|Q[1] ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.851      ;
; -1.293 ; latch2:inst8|Q[4] ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.003     ; 1.822      ;
; -1.291 ; latch2:inst|Q[1]  ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.821      ;
; -1.290 ; latch2:inst|Q[0]  ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.825      ;
; -1.285 ; latch2:inst8|Q[2] ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.815      ;
; -1.282 ; latch2:inst8|Q[0] ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.817      ;
; -1.280 ; latch2:inst8|Q[3] ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.810      ;
; -1.274 ; latch2:inst8|Q[1] ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.804      ;
; -1.272 ; latch2:inst8|Q[0] ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.807      ;
; -1.268 ; latch2:inst8|Q[3] ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.798      ;
; -1.253 ; latch2:inst|Q[2]  ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.783      ;
; -1.253 ; latch2:inst|Q[0]  ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.783      ;
; -1.252 ; latch2:inst8|Q[1] ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.787      ;
; -1.250 ; latch2:inst|Q[2]  ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.804      ;
; -1.246 ; latch2:inst8|Q[4] ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.003     ; 1.775      ;
; -1.245 ; latch2:inst|Q[3]  ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.775      ;
; -1.243 ; latch2:inst8|Q[2] ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.797      ;
; -1.242 ; latch2:inst8|Q[1] ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.777      ;
; -1.241 ; latch2:inst8|Q[4] ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.021      ; 1.794      ;
; -1.238 ; latch2:inst8|Q[2] ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.768      ;
; -1.231 ; latch2:inst|Q[4]  ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.761      ;
; -1.231 ; latch2:inst|Q[2]  ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.766      ;
; -1.224 ; latch2:inst8|Q[4] ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.002      ; 1.758      ;
; -1.223 ; latch2:inst8|Q[0] ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.753      ;
; -1.221 ; latch2:inst|Q[2]  ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.756      ;
; -1.218 ; latch2:inst8|Q[3] ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.748      ;
; -1.216 ; latch2:inst8|Q[2] ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.751      ;
; -1.214 ; latch2:inst8|Q[4] ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.002      ; 1.748      ;
; -1.211 ; latch2:inst|Q[3]  ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.765      ;
; -1.206 ; latch2:inst8|Q[2] ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.741      ;
; -1.199 ; latch2:inst8|Q[3] ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.734      ;
; -1.198 ; latch2:inst|Q[3]  ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.728      ;
; -1.196 ; latch2:inst8|Q[5] ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.726      ;
; -1.196 ; latch2:inst8|Q[1] ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.726      ;
; -1.192 ; latch2:inst|Q[1]  ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.722      ;
; -1.189 ; latch2:inst8|Q[3] ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.724      ;
; -1.184 ; latch2:inst|Q[4]  ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.714      ;
; -1.183 ; latch2:inst|Q[5]  ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.713      ;
; -1.182 ; latch2:inst|Q[2]  ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.712      ;
; -1.181 ; latch2:inst|Q[4]  ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.735      ;
; -1.176 ; latch2:inst|Q[3]  ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.711      ;
; -1.170 ; latch2:inst8|Q[4] ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.003     ; 1.699      ;
; -1.170 ; latch2:inst8|Q[0] ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.700      ;
; -1.167 ; latch2:inst8|Q[3] ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.697      ;
; -1.166 ; latch2:inst|Q[3]  ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.701      ;
; -1.163 ; latch2:inst|Q[0]  ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.693      ;
; -1.162 ; latch2:inst|Q[4]  ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.697      ;
; -1.161 ; latch2:inst8|Q[6] ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.691      ;
; -1.155 ; latch2:inst8|Q[5] ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.709      ;
; -1.155 ; latch2:inst8|Q[2] ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.685      ;
; -1.152 ; latch2:inst|Q[4]  ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.687      ;
; -1.149 ; latch2:inst|Q[1]  ; ALUcore:inst1|RESULT[0] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.703      ;
; -1.149 ; latch2:inst8|Q[5] ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.679      ;
; -1.147 ; latch2:inst|Q[5]  ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.701      ;
; -1.145 ; latch2:inst|Q[6]  ; ALUcore:inst1|RESULT[3] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.675      ;
; -1.143 ; latch2:inst8|Q[1] ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.673      ;
; -1.136 ; latch2:inst|Q[5]  ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.666      ;
; -1.127 ; latch2:inst8|Q[5] ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.662      ;
; -1.126 ; latch2:inst8|Q[6] ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.680      ;
; -1.124 ; latch2:inst|Q[3]  ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.654      ;
; -1.117 ; latch2:inst8|Q[5] ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.652      ;
; -1.114 ; latch2:inst8|Q[6] ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.644      ;
; -1.114 ; latch2:inst|Q[5]  ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.649      ;
; -1.110 ; latch2:inst|Q[4]  ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.640      ;
; -1.107 ; latch2:inst|Q[0]  ; ALUcore:inst1|RESULT[0] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.661      ;
; -1.105 ; latch2:inst|Q[2]  ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.635      ;
; -1.104 ; latch2:inst|Q[5]  ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.639      ;
; -1.098 ; latch2:inst|Q[6]  ; ALUcore:inst1|RESULT[7] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.628      ;
; -1.093 ; latch2:inst|Q[6]  ; ALUcore:inst1|RESULT[6] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.647      ;
; -1.092 ; latch2:inst8|Q[6] ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.627      ;
; -1.091 ; latch2:inst8|Q[2] ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.621      ;
; -1.089 ; latch2:inst8|Q[0] ; ALUcore:inst1|RESULT[0] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.643      ;
; -1.082 ; latch2:inst8|Q[6] ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.617      ;
; -1.076 ; latch2:inst|Q[6]  ; ALUcore:inst1|RESULT[1] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.611      ;
; -1.074 ; latch2:inst8|Q[4] ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.003     ; 1.603      ;
; -1.066 ; latch2:inst|Q[6]  ; ALUcore:inst1|RESULT[2] ; clock        ; clock       ; 0.500        ; 0.003      ; 1.601      ;
; -1.064 ; latch2:inst|Q[3]  ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.594      ;
; -1.059 ; latch2:inst8|Q[1] ; ALUcore:inst1|RESULT[0] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.613      ;
; -1.041 ; latch2:inst8|Q[5] ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.571      ;
; -1.038 ; latch2:inst|Q[2]  ; ALUcore:inst1|RESULT[0] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.592      ;
; -1.031 ; latch2:inst8|Q[4] ; ALUcore:inst1|RESULT[0] ; clock        ; clock       ; 0.500        ; 0.021      ; 1.584      ;
; -1.028 ; latch2:inst|Q[5]  ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.558      ;
; -1.023 ; latch2:inst8|Q[2] ; ALUcore:inst1|RESULT[0] ; clock        ; clock       ; 0.500        ; 0.022      ; 1.577      ;
; -1.012 ; latch2:inst|Q[4]  ; ALUcore:inst1|RESULT[4] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.542      ;
; -1.006 ; latch2:inst8|Q[6] ; ALUcore:inst1|RESULT[5] ; clock        ; clock       ; 0.500        ; -0.002     ; 1.536      ;
+--------+-------------------+-------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clock'                                                                                                                      ;
+-------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                      ; To Node                        ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+
; 0.215 ; ALUcore:inst1|NEG              ; ALUcore:inst1|NEG              ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.264 ; machine:inst2|yfsm.s2          ; machine:inst2|yfsm.s3          ; clock        ; clock       ; 0.000        ; 0.000      ; 0.416      ;
; 0.266 ; machine:inst2|yfsm.s1          ; machine:inst2|yfsm.s2          ; clock        ; clock       ; 0.000        ; 0.000      ; 0.418      ;
; 0.274 ; machine:inst2|yfsm.s0          ; machine:inst2|yfsm.s1          ; clock        ; clock       ; 0.000        ; 0.000      ; 0.426      ;
; 0.294 ; machine:inst2|yfsm.s8          ; machine:inst2|yfsm.s0          ; clock        ; clock       ; 0.000        ; 0.000      ; 0.446      ;
; 0.327 ; machine:inst2|yfsm.s4          ; machine:inst2|current_state[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.479      ;
; 0.335 ; machine:inst2|yfsm.s6          ; machine:inst2|yfsm.s7          ; clock        ; clock       ; 0.000        ; 0.000      ; 0.487      ;
; 0.370 ; machine:inst2|current_state[0] ; ALUcore:inst1|NEG              ; clock        ; clock       ; 0.000        ; 0.000      ; 0.522      ;
; 0.377 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[0]        ; clock        ; clock       ; 0.000        ; 0.000      ; 0.529      ;
; 0.410 ; machine:inst2|yfsm.s4          ; machine:inst2|yfsm.s5          ; clock        ; clock       ; 0.000        ; 0.000      ; 0.562      ;
; 0.418 ; machine:inst2|yfsm.s5          ; machine:inst2|yfsm.s6          ; clock        ; clock       ; 0.000        ; 0.000      ; 0.570      ;
; 0.432 ; machine:inst2|yfsm.s3          ; machine:inst2|yfsm.s4          ; clock        ; clock       ; 0.000        ; 0.000      ; 0.584      ;
; 0.487 ; machine:inst2|yfsm.s7          ; machine:inst2|yfsm.s8          ; clock        ; clock       ; 0.000        ; 0.000      ; 0.639      ;
; 0.502 ; machine:inst2|yfsm.s1          ; machine:inst2|current_state[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.654      ;
; 0.503 ; machine:inst2|yfsm.s5          ; machine:inst2|current_state[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.655      ;
; 0.514 ; machine:inst2|yfsm.s7          ; machine:inst2|current_state[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.666      ;
; 0.542 ; machine:inst2|yfsm.s8          ; machine:inst2|yfsm.s8          ; clock        ; clock       ; 0.000        ; 0.000      ; 0.694      ;
; 0.559 ; machine:inst2|yfsm.s3          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.711      ;
; 0.560 ; machine:inst2|current_state[1] ; ALUcore:inst1|NEG              ; clock        ; clock       ; 0.000        ; 0.000      ; 0.712      ;
; 0.567 ; machine:inst2|yfsm.s6          ; machine:inst2|current_state[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.719      ;
; 0.616 ; machine:inst2|yfsm.s5          ; machine:inst2|current_state[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.768      ;
; 0.617 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[0]        ; clock        ; clock       ; 0.000        ; 0.024      ; 0.793      ;
; 0.623 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[6]        ; clock        ; clock       ; 0.000        ; 0.000      ; 0.775      ;
; 0.623 ; machine:inst2|yfsm.s2          ; machine:inst2|current_state[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.775      ;
; 0.658 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[6]        ; clock        ; clock       ; 0.000        ; 0.024      ; 0.834      ;
; 0.669 ; machine:inst2|yfsm.s7          ; machine:inst2|current_state[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.821      ;
; 0.671 ; machine:inst2|yfsm.s3          ; machine:inst2|current_state[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.823      ;
; 0.674 ; machine:inst2|yfsm.s5          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.826      ;
; 0.675 ; machine:inst2|yfsm.s7          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.827      ;
; 0.678 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[6]        ; clock        ; clock       ; 0.000        ; 0.000      ; 0.830      ;
; 0.679 ; machine:inst2|yfsm.s1          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.831      ;
; 0.685 ; machine:inst2|yfsm.s6          ; machine:inst2|current_state[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.837      ;
; 0.685 ; machine:inst2|yfsm.s3          ; machine:inst2|current_state[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.837      ;
; 0.688 ; machine:inst2|current_state[2] ; ALUcore:inst1|NEG              ; clock        ; clock       ; 0.000        ; 0.000      ; 0.840      ;
; 0.689 ; machine:inst2|yfsm.s4          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.841      ;
; 0.708 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[6]        ; clock        ; clock       ; 0.000        ; 0.000      ; 0.860      ;
; 0.712 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[4]        ; clock        ; clock       ; 0.000        ; 0.000      ; 0.864      ;
; 0.722 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[1]        ; clock        ; clock       ; 0.000        ; 0.005      ; 0.879      ;
; 0.773 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[0]        ; clock        ; clock       ; 0.000        ; 0.000      ; 0.925      ;
; 0.777 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[4]        ; clock        ; clock       ; 0.000        ; -0.024     ; 0.905      ;
; 0.781 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[0]        ; clock        ; clock       ; 0.000        ; 0.000      ; 0.933      ;
; 0.786 ; machine:inst2|yfsm.s7          ; machine:inst2|current_state[3] ; clock        ; clock       ; 0.000        ; -0.024     ; 0.914      ;
; 0.812 ; machine:inst2|yfsm.s6          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.964      ;
; 0.822 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[7]        ; clock        ; clock       ; 0.000        ; -0.024     ; 0.950      ;
; 0.824 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[3]        ; clock        ; clock       ; 0.000        ; -0.024     ; 0.952      ;
; 0.838 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[5]        ; clock        ; clock       ; 0.000        ; -0.024     ; 0.966      ;
; 0.841 ; machine:inst2|yfsm.s8          ; machine:inst2|current_state[3] ; clock        ; clock       ; 0.000        ; -0.024     ; 0.969      ;
; 0.845 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[4]        ; clock        ; clock       ; 0.000        ; -0.024     ; 0.973      ;
; 0.854 ; machine:inst2|yfsm.s0          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.006      ;
; 0.860 ; machine:inst2|yfsm.s2          ; machine:inst2|current_state[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.012      ;
; 0.867 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[5]        ; clock        ; clock       ; 0.000        ; -0.024     ; 0.995      ;
; 0.871 ; machine:inst2|current_state[3] ; ALUcore:inst1|NEG              ; clock        ; clock       ; 0.000        ; 0.024      ; 1.047      ;
; 0.874 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[2]        ; clock        ; clock       ; 0.000        ; -0.019     ; 1.007      ;
; 0.886 ; machine:inst2|current_state[0] ; ALUcore:inst1|RESULT[1]        ; clock        ; clock       ; 0.000        ; -0.019     ; 1.019      ;
; 0.894 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[4]        ; clock        ; clock       ; 0.000        ; -0.024     ; 1.022      ;
; 0.914 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[7]        ; clock        ; clock       ; 0.000        ; -0.024     ; 1.042      ;
; 0.964 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[7]        ; clock        ; clock       ; 0.000        ; 0.000      ; 1.116      ;
; 0.966 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[3]        ; clock        ; clock       ; 0.000        ; 0.000      ; 1.118      ;
; 0.980 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[5]        ; clock        ; clock       ; 0.000        ; 0.000      ; 1.132      ;
; 0.983 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[5]        ; clock        ; clock       ; 0.000        ; -0.024     ; 1.111      ;
; 0.984 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[7]        ; clock        ; clock       ; 0.000        ; -0.024     ; 1.112      ;
; 0.998 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[3]        ; clock        ; clock       ; 0.000        ; -0.024     ; 1.126      ;
; 1.016 ; machine:inst2|current_state[3] ; ALUcore:inst1|RESULT[2]        ; clock        ; clock       ; 0.000        ; 0.005      ; 1.173      ;
; 1.028 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[1]        ; clock        ; clock       ; 0.000        ; -0.019     ; 1.161      ;
; 1.029 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[1]        ; clock        ; clock       ; 0.000        ; -0.019     ; 1.162      ;
; 1.065 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[3]        ; clock        ; clock       ; 0.000        ; -0.024     ; 1.193      ;
; 1.101 ; machine:inst2|current_state[1] ; ALUcore:inst1|RESULT[2]        ; clock        ; clock       ; 0.000        ; -0.019     ; 1.234      ;
; 1.111 ; latch2:inst8|Q[7]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.022      ; 0.785      ;
; 1.114 ; machine:inst2|current_state[2] ; ALUcore:inst1|RESULT[2]        ; clock        ; clock       ; 0.000        ; -0.019     ; 1.247      ;
; 1.174 ; latch2:inst8|Q[3]              ; ALUcore:inst1|RESULT[3]        ; clock        ; clock       ; -0.500       ; -0.002     ; 0.824      ;
; 1.225 ; latch2:inst|Q[7]               ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.022      ; 0.899      ;
; 1.241 ; latch2:inst|Q[3]               ; ALUcore:inst1|RESULT[3]        ; clock        ; clock       ; -0.500       ; -0.002     ; 0.891      ;
; 1.254 ; latch2:inst|Q[6]               ; ALUcore:inst1|RESULT[6]        ; clock        ; clock       ; -0.500       ; 0.022      ; 0.928      ;
; 1.366 ; latch2:inst|Q[6]               ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.022      ; 1.040      ;
; 1.369 ; latch2:inst|Q[2]               ; ALUcore:inst1|RESULT[2]        ; clock        ; clock       ; -0.500       ; 0.003      ; 1.024      ;
; 1.382 ; latch2:inst8|Q[6]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.022      ; 1.056      ;
; 1.396 ; latch2:inst|Q[4]               ; ALUcore:inst1|RESULT[4]        ; clock        ; clock       ; -0.500       ; -0.002     ; 1.046      ;
; 1.404 ; latch2:inst|Q[5]               ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.022      ; 1.078      ;
; 1.417 ; latch2:inst8|Q[5]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.022      ; 1.091      ;
; 1.427 ; latch2:inst|Q[5]               ; ALUcore:inst1|RESULT[5]        ; clock        ; clock       ; -0.500       ; -0.002     ; 1.077      ;
; 1.443 ; latch2:inst8|Q[7]              ; ALUcore:inst1|RESULT[7]        ; clock        ; clock       ; -0.500       ; -0.002     ; 1.093      ;
; 1.446 ; latch2:inst|Q[1]               ; ALUcore:inst1|RESULT[1]        ; clock        ; clock       ; -0.500       ; 0.003      ; 1.101      ;
; 1.452 ; latch2:inst|Q[4]               ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.022      ; 1.126      ;
; 1.466 ; latch2:inst|Q[3]               ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.022      ; 1.140      ;
; 1.467 ; latch2:inst8|Q[2]              ; ALUcore:inst1|RESULT[2]        ; clock        ; clock       ; -0.500       ; 0.003      ; 1.122      ;
; 1.480 ; latch2:inst8|Q[1]              ; ALUcore:inst1|RESULT[1]        ; clock        ; clock       ; -0.500       ; 0.003      ; 1.135      ;
; 1.487 ; latch2:inst|Q[0]               ; ALUcore:inst1|RESULT[0]        ; clock        ; clock       ; -0.500       ; 0.022      ; 1.161      ;
; 1.489 ; latch2:inst8|Q[3]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.022      ; 1.163      ;
; 1.495 ; latch2:inst|Q[7]               ; ALUcore:inst1|RESULT[7]        ; clock        ; clock       ; -0.500       ; -0.002     ; 1.145      ;
; 1.506 ; latch2:inst8|Q[2]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.022      ; 1.180      ;
; 1.508 ; latch2:inst8|Q[7]              ; ALUcore:inst1|RESULT[0]        ; clock        ; clock       ; -0.500       ; 0.022      ; 1.182      ;
; 1.514 ; latch2:inst8|Q[4]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.021      ; 1.187      ;
; 1.521 ; latch2:inst|Q[2]               ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.022      ; 1.195      ;
; 1.536 ; latch2:inst8|Q[5]              ; ALUcore:inst1|RESULT[5]        ; clock        ; clock       ; -0.500       ; -0.002     ; 1.186      ;
; 1.542 ; latch2:inst8|Q[1]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.022      ; 1.216      ;
; 1.551 ; latch2:inst8|Q[7]              ; ALUcore:inst1|RESULT[4]        ; clock        ; clock       ; -0.500       ; -0.002     ; 1.201      ;
; 1.565 ; latch2:inst8|Q[0]              ; ALUcore:inst1|RESULT[0]        ; clock        ; clock       ; -0.500       ; 0.022      ; 1.239      ;
; 1.572 ; latch2:inst8|Q[0]              ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.022      ; 1.246      ;
; 1.590 ; latch2:inst|Q[0]               ; ALUcore:inst1|NEG              ; clock        ; clock       ; -0.500       ; 0.022      ; 1.264      ;
; 1.615 ; latch2:inst8|Q[7]              ; ALUcore:inst1|RESULT[5]        ; clock        ; clock       ; -0.500       ; -0.002     ; 1.265      ;
+-------+--------------------------------+--------------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clock'                                                                         ;
+--------+--------------+----------------+------------------+-------+------------+--------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                         ;
+--------+--------------+----------------+------------------+-------+------------+--------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clock ; Rise       ; clock                          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|NEG              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|NEG              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[0]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[0]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[1]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[1]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[2]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[2]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[3]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[3]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[4]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[4]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[5]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[5]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[6]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[6]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALUcore:inst1|RESULT[7]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALUcore:inst1|RESULT[7]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[0]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[0]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[1]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[1]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[2]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[2]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[3]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[3]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[4]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[4]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[5]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[5]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[6]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[6]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst8|Q[7]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst8|Q[7]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Fall       ; latch2:inst|Q[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Fall       ; latch2:inst|Q[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|current_state[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|current_state[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|current_state[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|current_state[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|current_state[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|current_state[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|current_state[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|current_state[3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s0          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s0          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s1          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s1          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s2          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s2          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s3          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s3          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s4          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s4          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s5          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s5          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s6          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s6          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s7          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s7          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; machine:inst2|yfsm.s8          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; machine:inst2|yfsm.s8          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock|combout                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock|combout                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock~clkctrl|inclk[0]         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock~clkctrl|inclk[0]         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock~clkctrl|outclk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock~clkctrl|outclk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|NEG|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|NEG|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|RESULT[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|RESULT[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|RESULT[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|RESULT[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|RESULT[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|RESULT[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|RESULT[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|RESULT[7]|clk            ;
+--------+--------------+----------------+------------------+-------+------------+--------------------------------+


+------------------------------------------------------------------------------+
; Setup Times                                                                  ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; Enable_Decoder ; clock      ; 3.535  ; 3.535  ; Rise       ; clock           ;
; FSM_reset      ; clock      ; 0.404  ; 0.404  ; Rise       ; clock           ;
; data_in        ; clock      ; 3.278  ; 3.278  ; Rise       ; clock           ;
; A[*]           ; clock      ; 0.448  ; 0.448  ; Fall       ; clock           ;
;  A[0]          ; clock      ; 0.067  ; 0.067  ; Fall       ; clock           ;
;  A[1]          ; clock      ; -0.541 ; -0.541 ; Fall       ; clock           ;
;  A[2]          ; clock      ; -0.540 ; -0.540 ; Fall       ; clock           ;
;  A[3]          ; clock      ; -0.641 ; -0.641 ; Fall       ; clock           ;
;  A[4]          ; clock      ; -0.638 ; -0.638 ; Fall       ; clock           ;
;  A[5]          ; clock      ; 0.448  ; 0.448  ; Fall       ; clock           ;
;  A[6]          ; clock      ; 0.263  ; 0.263  ; Fall       ; clock           ;
;  A[7]          ; clock      ; 0.363  ; 0.363  ; Fall       ; clock           ;
; b[*]           ; clock      ; 2.638  ; 2.638  ; Fall       ; clock           ;
;  b[0]          ; clock      ; 0.101  ; 0.101  ; Fall       ; clock           ;
;  b[1]          ; clock      ; 0.338  ; 0.338  ; Fall       ; clock           ;
;  b[2]          ; clock      ; 0.205  ; 0.205  ; Fall       ; clock           ;
;  b[3]          ; clock      ; 2.531  ; 2.531  ; Fall       ; clock           ;
;  b[4]          ; clock      ; 2.638  ; 2.638  ; Fall       ; clock           ;
;  b[5]          ; clock      ; 2.631  ; 2.631  ; Fall       ; clock           ;
;  b[6]          ; clock      ; 2.579  ; 2.579  ; Fall       ; clock           ;
;  b[7]          ; clock      ; 2.627  ; 2.627  ; Fall       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Hold Times                                                                   ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; Enable_Decoder ; clock      ; -2.606 ; -2.606 ; Rise       ; clock           ;
; FSM_reset      ; clock      ; -0.159 ; -0.159 ; Rise       ; clock           ;
; data_in        ; clock      ; -2.761 ; -2.761 ; Rise       ; clock           ;
; A[*]           ; clock      ; 0.761  ; 0.761  ; Fall       ; clock           ;
;  A[0]          ; clock      ; 0.053  ; 0.053  ; Fall       ; clock           ;
;  A[1]          ; clock      ; 0.661  ; 0.661  ; Fall       ; clock           ;
;  A[2]          ; clock      ; 0.660  ; 0.660  ; Fall       ; clock           ;
;  A[3]          ; clock      ; 0.761  ; 0.761  ; Fall       ; clock           ;
;  A[4]          ; clock      ; 0.758  ; 0.758  ; Fall       ; clock           ;
;  A[5]          ; clock      ; -0.328 ; -0.328 ; Fall       ; clock           ;
;  A[6]          ; clock      ; -0.143 ; -0.143 ; Fall       ; clock           ;
;  A[7]          ; clock      ; -0.243 ; -0.243 ; Fall       ; clock           ;
; b[*]           ; clock      ; 0.019  ; 0.019  ; Fall       ; clock           ;
;  b[0]          ; clock      ; 0.019  ; 0.019  ; Fall       ; clock           ;
;  b[1]          ; clock      ; -0.218 ; -0.218 ; Fall       ; clock           ;
;  b[2]          ; clock      ; -0.085 ; -0.085 ; Fall       ; clock           ;
;  b[3]          ; clock      ; -2.411 ; -2.411 ; Fall       ; clock           ;
;  b[4]          ; clock      ; -2.518 ; -2.518 ; Fall       ; clock           ;
;  b[5]          ; clock      ; -2.511 ; -2.511 ; Fall       ; clock           ;
;  b[6]          ; clock      ; -2.459 ; -2.459 ; Fall       ; clock           ;
;  b[7]          ; clock      ; -2.507 ; -2.507 ; Fall       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Clock to Output Times                                                        ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; AOUT[*]          ; clock      ; 3.759 ; 3.759 ; Rise       ; clock           ;
;  AOUT[0]         ; clock      ; 3.658 ; 3.658 ; Rise       ; clock           ;
;  AOUT[1]         ; clock      ; 3.716 ; 3.716 ; Rise       ; clock           ;
;  AOUT[2]         ; clock      ; 3.723 ; 3.723 ; Rise       ; clock           ;
;  AOUT[3]         ; clock      ; 3.759 ; 3.759 ; Rise       ; clock           ;
; BOUT[*]          ; clock      ; 4.651 ; 4.651 ; Rise       ; clock           ;
;  BOUT[0]         ; clock      ; 4.206 ; 4.206 ; Rise       ; clock           ;
;  BOUT[1]         ; clock      ; 4.651 ; 4.651 ; Rise       ; clock           ;
;  BOUT[2]         ; clock      ; 4.085 ; 4.085 ; Rise       ; clock           ;
;  BOUT[3]         ; clock      ; 3.991 ; 3.991 ; Rise       ; clock           ;
; CUROUT[*]        ; clock      ; 3.872 ; 3.872 ; Rise       ; clock           ;
;  CUROUT[0]       ; clock      ; 3.777 ; 3.777 ; Rise       ; clock           ;
;  CUROUT[1]       ; clock      ; 3.671 ; 3.671 ; Rise       ; clock           ;
;  CUROUT[2]       ; clock      ; 3.872 ; 3.872 ; Rise       ; clock           ;
;  CUROUT[3]       ; clock      ; 3.751 ; 3.751 ; Rise       ; clock           ;
; NEGOUT           ; clock      ; 4.997 ; 4.997 ; Rise       ; clock           ;
; R_First_Four[*]  ; clock      ; 5.090 ; 5.090 ; Rise       ; clock           ;
;  R_First_Four[0] ; clock      ; 5.090 ; 5.090 ; Rise       ; clock           ;
;  R_First_Four[1] ; clock      ; 5.060 ; 5.060 ; Rise       ; clock           ;
;  R_First_Four[2] ; clock      ; 4.836 ; 4.836 ; Rise       ; clock           ;
;  R_First_Four[3] ; clock      ; 4.810 ; 4.810 ; Rise       ; clock           ;
;  R_First_Four[4] ; clock      ; 4.846 ; 4.846 ; Rise       ; clock           ;
;  R_First_Four[5] ; clock      ; 4.946 ; 4.946 ; Rise       ; clock           ;
;  R_First_Four[6] ; clock      ; 4.961 ; 4.961 ; Rise       ; clock           ;
; R_Last_Four[*]   ; clock      ; 4.494 ; 4.494 ; Rise       ; clock           ;
;  R_Last_Four[0]  ; clock      ; 4.494 ; 4.494 ; Rise       ; clock           ;
;  R_Last_Four[1]  ; clock      ; 4.439 ; 4.439 ; Rise       ; clock           ;
;  R_Last_Four[2]  ; clock      ; 4.461 ; 4.461 ; Rise       ; clock           ;
;  R_Last_Four[3]  ; clock      ; 4.324 ; 4.324 ; Rise       ; clock           ;
;  R_Last_Four[4]  ; clock      ; 4.328 ; 4.328 ; Rise       ; clock           ;
;  R_Last_Four[5]  ; clock      ; 4.344 ; 4.344 ; Rise       ; clock           ;
;  R_Last_Four[6]  ; clock      ; 4.344 ; 4.344 ; Rise       ; clock           ;
; Sign[*]          ; clock      ; 4.603 ; 4.603 ; Rise       ; clock           ;
;  Sign[6]         ; clock      ; 4.603 ; 4.603 ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 6.069 ; 6.069 ; Rise       ; clock           ;
;  student_id[0]   ; clock      ; 5.781 ; 5.781 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 5.912 ; 5.912 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 6.018 ; 6.018 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 6.069 ; 6.069 ; Rise       ; clock           ;
;  student_id[5]   ; clock      ; 4.792 ; 4.792 ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 5.414 ; 5.414 ; Rise       ; clock           ;
+------------------+------------+-------+-------+------------+-----------------+


+------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; AOUT[*]          ; clock      ; 3.658 ; 3.658 ; Rise       ; clock           ;
;  AOUT[0]         ; clock      ; 3.658 ; 3.658 ; Rise       ; clock           ;
;  AOUT[1]         ; clock      ; 3.716 ; 3.716 ; Rise       ; clock           ;
;  AOUT[2]         ; clock      ; 3.723 ; 3.723 ; Rise       ; clock           ;
;  AOUT[3]         ; clock      ; 3.759 ; 3.759 ; Rise       ; clock           ;
; BOUT[*]          ; clock      ; 3.991 ; 3.991 ; Rise       ; clock           ;
;  BOUT[0]         ; clock      ; 4.206 ; 4.206 ; Rise       ; clock           ;
;  BOUT[1]         ; clock      ; 4.651 ; 4.651 ; Rise       ; clock           ;
;  BOUT[2]         ; clock      ; 4.085 ; 4.085 ; Rise       ; clock           ;
;  BOUT[3]         ; clock      ; 3.991 ; 3.991 ; Rise       ; clock           ;
; CUROUT[*]        ; clock      ; 3.671 ; 3.671 ; Rise       ; clock           ;
;  CUROUT[0]       ; clock      ; 3.777 ; 3.777 ; Rise       ; clock           ;
;  CUROUT[1]       ; clock      ; 3.671 ; 3.671 ; Rise       ; clock           ;
;  CUROUT[2]       ; clock      ; 3.872 ; 3.872 ; Rise       ; clock           ;
;  CUROUT[3]       ; clock      ; 3.751 ; 3.751 ; Rise       ; clock           ;
; NEGOUT           ; clock      ; 4.997 ; 4.997 ; Rise       ; clock           ;
; R_First_Four[*]  ; clock      ; 4.495 ; 4.495 ; Rise       ; clock           ;
;  R_First_Four[0] ; clock      ; 4.775 ; 4.775 ; Rise       ; clock           ;
;  R_First_Four[1] ; clock      ; 4.749 ; 4.749 ; Rise       ; clock           ;
;  R_First_Four[2] ; clock      ; 4.525 ; 4.525 ; Rise       ; clock           ;
;  R_First_Four[3] ; clock      ; 4.495 ; 4.495 ; Rise       ; clock           ;
;  R_First_Four[4] ; clock      ; 4.538 ; 4.538 ; Rise       ; clock           ;
;  R_First_Four[5] ; clock      ; 4.633 ; 4.633 ; Rise       ; clock           ;
;  R_First_Four[6] ; clock      ; 4.648 ; 4.648 ; Rise       ; clock           ;
; R_Last_Four[*]   ; clock      ; 3.972 ; 3.972 ; Rise       ; clock           ;
;  R_Last_Four[0]  ; clock      ; 4.183 ; 4.183 ; Rise       ; clock           ;
;  R_Last_Four[1]  ; clock      ; 4.127 ; 4.127 ; Rise       ; clock           ;
;  R_Last_Four[2]  ; clock      ; 4.143 ; 4.143 ; Rise       ; clock           ;
;  R_Last_Four[3]  ; clock      ; 3.972 ; 3.972 ; Rise       ; clock           ;
;  R_Last_Four[4]  ; clock      ; 3.979 ; 3.979 ; Rise       ; clock           ;
;  R_Last_Four[5]  ; clock      ; 4.034 ; 4.034 ; Rise       ; clock           ;
;  R_Last_Four[6]  ; clock      ; 4.034 ; 4.034 ; Rise       ; clock           ;
; Sign[*]          ; clock      ; 4.603 ; 4.603 ; Rise       ; clock           ;
;  Sign[6]         ; clock      ; 4.603 ; 4.603 ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 4.664 ; 4.664 ; Rise       ; clock           ;
;  student_id[0]   ; clock      ; 4.795 ; 4.795 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 5.259 ; 5.259 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 5.367 ; 5.367 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 5.412 ; 5.412 ; Rise       ; clock           ;
;  student_id[5]   ; clock      ; 4.664 ; 4.664 ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 4.810 ; 4.810 ; Rise       ; clock           ;
+------------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                           ;
+------------------+---------+-------+----------+---------+---------------------+
; Clock            ; Setup   ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+---------+-------+----------+---------+---------------------+
; Worst-case Slack ; -3.859  ; 0.215 ; N/A      ; N/A     ; -1.380              ;
;  clock           ; -3.859  ; 0.215 ; N/A      ; N/A     ; -1.380              ;
; Design-wide TNS  ; -35.845 ; 0.0   ; 0.0      ; 0.0     ; -39.38              ;
;  clock           ; -35.845 ; 0.000 ; N/A      ; N/A     ; -39.380             ;
+------------------+---------+-------+----------+---------+---------------------+


+------------------------------------------------------------------------------+
; Setup Times                                                                  ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; Enable_Decoder ; clock      ; 6.836  ; 6.836  ; Rise       ; clock           ;
; FSM_reset      ; clock      ; 1.193  ; 1.193  ; Rise       ; clock           ;
; data_in        ; clock      ; 6.139  ; 6.139  ; Rise       ; clock           ;
; A[*]           ; clock      ; 1.200  ; 1.200  ; Fall       ; clock           ;
;  A[0]          ; clock      ; 0.609  ; 0.609  ; Fall       ; clock           ;
;  A[1]          ; clock      ; -0.483 ; -0.483 ; Fall       ; clock           ;
;  A[2]          ; clock      ; -0.482 ; -0.482 ; Fall       ; clock           ;
;  A[3]          ; clock      ; -0.641 ; -0.641 ; Fall       ; clock           ;
;  A[4]          ; clock      ; -0.638 ; -0.638 ; Fall       ; clock           ;
;  A[5]          ; clock      ; 1.200  ; 1.200  ; Fall       ; clock           ;
;  A[6]          ; clock      ; 0.825  ; 0.825  ; Fall       ; clock           ;
;  A[7]          ; clock      ; 0.970  ; 0.970  ; Fall       ; clock           ;
; b[*]           ; clock      ; 4.856  ; 4.856  ; Fall       ; clock           ;
;  b[0]          ; clock      ; 0.651  ; 0.651  ; Fall       ; clock           ;
;  b[1]          ; clock      ; 1.075  ; 1.075  ; Fall       ; clock           ;
;  b[2]          ; clock      ; 0.883  ; 0.883  ; Fall       ; clock           ;
;  b[3]          ; clock      ; 4.695  ; 4.695  ; Fall       ; clock           ;
;  b[4]          ; clock      ; 4.856  ; 4.856  ; Fall       ; clock           ;
;  b[5]          ; clock      ; 4.828  ; 4.828  ; Fall       ; clock           ;
;  b[6]          ; clock      ; 4.757  ; 4.757  ; Fall       ; clock           ;
;  b[7]          ; clock      ; 4.818  ; 4.818  ; Fall       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Hold Times                                                                   ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; Enable_Decoder ; clock      ; -2.606 ; -2.606 ; Rise       ; clock           ;
; FSM_reset      ; clock      ; -0.159 ; -0.159 ; Rise       ; clock           ;
; data_in        ; clock      ; -2.761 ; -2.761 ; Rise       ; clock           ;
; A[*]           ; clock      ; 0.933  ; 0.933  ; Fall       ; clock           ;
;  A[0]          ; clock      ; 0.053  ; 0.053  ; Fall       ; clock           ;
;  A[1]          ; clock      ; 0.713  ; 0.713  ; Fall       ; clock           ;
;  A[2]          ; clock      ; 0.712  ; 0.712  ; Fall       ; clock           ;
;  A[3]          ; clock      ; 0.933  ; 0.933  ; Fall       ; clock           ;
;  A[4]          ; clock      ; 0.931  ; 0.931  ; Fall       ; clock           ;
;  A[5]          ; clock      ; -0.328 ; -0.328 ; Fall       ; clock           ;
;  A[6]          ; clock      ; -0.143 ; -0.143 ; Fall       ; clock           ;
;  A[7]          ; clock      ; -0.243 ; -0.243 ; Fall       ; clock           ;
; b[*]           ; clock      ; 0.019  ; 0.019  ; Fall       ; clock           ;
;  b[0]          ; clock      ; 0.019  ; 0.019  ; Fall       ; clock           ;
;  b[1]          ; clock      ; -0.218 ; -0.218 ; Fall       ; clock           ;
;  b[2]          ; clock      ; -0.085 ; -0.085 ; Fall       ; clock           ;
;  b[3]          ; clock      ; -2.411 ; -2.411 ; Fall       ; clock           ;
;  b[4]          ; clock      ; -2.518 ; -2.518 ; Fall       ; clock           ;
;  b[5]          ; clock      ; -2.511 ; -2.511 ; Fall       ; clock           ;
;  b[6]          ; clock      ; -2.459 ; -2.459 ; Fall       ; clock           ;
;  b[7]          ; clock      ; -2.507 ; -2.507 ; Fall       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Clock to Output Times                                                          ;
+------------------+------------+--------+--------+------------+-----------------+
; Data Port        ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------------+------------+--------+--------+------------+-----------------+
; AOUT[*]          ; clock      ; 6.609  ; 6.609  ; Rise       ; clock           ;
;  AOUT[0]         ; clock      ; 6.381  ; 6.381  ; Rise       ; clock           ;
;  AOUT[1]         ; clock      ; 6.554  ; 6.554  ; Rise       ; clock           ;
;  AOUT[2]         ; clock      ; 6.559  ; 6.559  ; Rise       ; clock           ;
;  AOUT[3]         ; clock      ; 6.609  ; 6.609  ; Rise       ; clock           ;
; BOUT[*]          ; clock      ; 8.559  ; 8.559  ; Rise       ; clock           ;
;  BOUT[0]         ; clock      ; 7.620  ; 7.620  ; Rise       ; clock           ;
;  BOUT[1]         ; clock      ; 8.559  ; 8.559  ; Rise       ; clock           ;
;  BOUT[2]         ; clock      ; 7.317  ; 7.317  ; Rise       ; clock           ;
;  BOUT[3]         ; clock      ; 7.057  ; 7.057  ; Rise       ; clock           ;
; CUROUT[*]        ; clock      ; 6.862  ; 6.862  ; Rise       ; clock           ;
;  CUROUT[0]       ; clock      ; 6.638  ; 6.638  ; Rise       ; clock           ;
;  CUROUT[1]       ; clock      ; 6.401  ; 6.401  ; Rise       ; clock           ;
;  CUROUT[2]       ; clock      ; 6.862  ; 6.862  ; Rise       ; clock           ;
;  CUROUT[3]       ; clock      ; 6.596  ; 6.596  ; Rise       ; clock           ;
; NEGOUT           ; clock      ; 9.320  ; 9.320  ; Rise       ; clock           ;
; R_First_Four[*]  ; clock      ; 9.552  ; 9.552  ; Rise       ; clock           ;
;  R_First_Four[0] ; clock      ; 9.552  ; 9.552  ; Rise       ; clock           ;
;  R_First_Four[1] ; clock      ; 9.504  ; 9.504  ; Rise       ; clock           ;
;  R_First_Four[2] ; clock      ; 9.108  ; 9.108  ; Rise       ; clock           ;
;  R_First_Four[3] ; clock      ; 9.063  ; 9.063  ; Rise       ; clock           ;
;  R_First_Four[4] ; clock      ; 9.117  ; 9.117  ; Rise       ; clock           ;
;  R_First_Four[5] ; clock      ; 9.352  ; 9.352  ; Rise       ; clock           ;
;  R_First_Four[6] ; clock      ; 9.368  ; 9.368  ; Rise       ; clock           ;
; R_Last_Four[*]   ; clock      ; 8.268  ; 8.268  ; Rise       ; clock           ;
;  R_Last_Four[0]  ; clock      ; 8.268  ; 8.268  ; Rise       ; clock           ;
;  R_Last_Four[1]  ; clock      ; 8.201  ; 8.201  ; Rise       ; clock           ;
;  R_Last_Four[2]  ; clock      ; 8.215  ; 8.215  ; Rise       ; clock           ;
;  R_Last_Four[3]  ; clock      ; 7.934  ; 7.934  ; Rise       ; clock           ;
;  R_Last_Four[4]  ; clock      ; 7.936  ; 7.936  ; Rise       ; clock           ;
;  R_Last_Four[5]  ; clock      ; 7.949  ; 7.949  ; Rise       ; clock           ;
;  R_Last_Four[6]  ; clock      ; 7.970  ; 7.970  ; Rise       ; clock           ;
; Sign[*]          ; clock      ; 8.493  ; 8.493  ; Rise       ; clock           ;
;  Sign[6]         ; clock      ; 8.493  ; 8.493  ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 11.453 ; 11.453 ; Rise       ; clock           ;
;  student_id[0]   ; clock      ; 10.826 ; 10.826 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 11.116 ; 11.116 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 11.376 ; 11.376 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 11.453 ; 11.453 ; Rise       ; clock           ;
;  student_id[5]   ; clock      ; 8.741  ; 8.741  ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 10.255 ; 10.255 ; Rise       ; clock           ;
+------------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; AOUT[*]          ; clock      ; 3.658 ; 3.658 ; Rise       ; clock           ;
;  AOUT[0]         ; clock      ; 3.658 ; 3.658 ; Rise       ; clock           ;
;  AOUT[1]         ; clock      ; 3.716 ; 3.716 ; Rise       ; clock           ;
;  AOUT[2]         ; clock      ; 3.723 ; 3.723 ; Rise       ; clock           ;
;  AOUT[3]         ; clock      ; 3.759 ; 3.759 ; Rise       ; clock           ;
; BOUT[*]          ; clock      ; 3.991 ; 3.991 ; Rise       ; clock           ;
;  BOUT[0]         ; clock      ; 4.206 ; 4.206 ; Rise       ; clock           ;
;  BOUT[1]         ; clock      ; 4.651 ; 4.651 ; Rise       ; clock           ;
;  BOUT[2]         ; clock      ; 4.085 ; 4.085 ; Rise       ; clock           ;
;  BOUT[3]         ; clock      ; 3.991 ; 3.991 ; Rise       ; clock           ;
; CUROUT[*]        ; clock      ; 3.671 ; 3.671 ; Rise       ; clock           ;
;  CUROUT[0]       ; clock      ; 3.777 ; 3.777 ; Rise       ; clock           ;
;  CUROUT[1]       ; clock      ; 3.671 ; 3.671 ; Rise       ; clock           ;
;  CUROUT[2]       ; clock      ; 3.872 ; 3.872 ; Rise       ; clock           ;
;  CUROUT[3]       ; clock      ; 3.751 ; 3.751 ; Rise       ; clock           ;
; NEGOUT           ; clock      ; 4.997 ; 4.997 ; Rise       ; clock           ;
; R_First_Four[*]  ; clock      ; 4.495 ; 4.495 ; Rise       ; clock           ;
;  R_First_Four[0] ; clock      ; 4.775 ; 4.775 ; Rise       ; clock           ;
;  R_First_Four[1] ; clock      ; 4.749 ; 4.749 ; Rise       ; clock           ;
;  R_First_Four[2] ; clock      ; 4.525 ; 4.525 ; Rise       ; clock           ;
;  R_First_Four[3] ; clock      ; 4.495 ; 4.495 ; Rise       ; clock           ;
;  R_First_Four[4] ; clock      ; 4.538 ; 4.538 ; Rise       ; clock           ;
;  R_First_Four[5] ; clock      ; 4.633 ; 4.633 ; Rise       ; clock           ;
;  R_First_Four[6] ; clock      ; 4.648 ; 4.648 ; Rise       ; clock           ;
; R_Last_Four[*]   ; clock      ; 3.972 ; 3.972 ; Rise       ; clock           ;
;  R_Last_Four[0]  ; clock      ; 4.183 ; 4.183 ; Rise       ; clock           ;
;  R_Last_Four[1]  ; clock      ; 4.127 ; 4.127 ; Rise       ; clock           ;
;  R_Last_Four[2]  ; clock      ; 4.143 ; 4.143 ; Rise       ; clock           ;
;  R_Last_Four[3]  ; clock      ; 3.972 ; 3.972 ; Rise       ; clock           ;
;  R_Last_Four[4]  ; clock      ; 3.979 ; 3.979 ; Rise       ; clock           ;
;  R_Last_Four[5]  ; clock      ; 4.034 ; 4.034 ; Rise       ; clock           ;
;  R_Last_Four[6]  ; clock      ; 4.034 ; 4.034 ; Rise       ; clock           ;
; Sign[*]          ; clock      ; 4.603 ; 4.603 ; Rise       ; clock           ;
;  Sign[6]         ; clock      ; 4.603 ; 4.603 ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 4.664 ; 4.664 ; Rise       ; clock           ;
;  student_id[0]   ; clock      ; 4.795 ; 4.795 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 5.259 ; 5.259 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 5.367 ; 5.367 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 5.412 ; 5.412 ; Rise       ; clock           ;
;  student_id[5]   ; clock      ; 4.664 ; 4.664 ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 4.810 ; 4.810 ; Rise       ; clock           ;
+------------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clock      ; clock    ; 252      ; 406      ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clock      ; clock    ; 252      ; 406      ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 21    ; 21   ;
; Unconstrained Input Port Paths  ; 67    ; 67   ;
; Unconstrained Output Ports      ; 34    ; 34   ;
; Unconstrained Output Port Paths ; 109   ; 109  ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 32-bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version
    Info: Processing started: Thu Nov 30 19:02:49 2023
Info: Command: quartus_sta Lab6 -c Lab6
Info: qsta_default_script.tcl version: #1
Info (11104): Parallel Compilation has detected 8 hyper-threaded processors. However, the extra hyper-threaded processors will not be used by default. Parallel Compilation will use 4 of the 4 physical processors detected instead.
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'Lab6.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clock clock
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -3.859
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.859       -35.845 clock 
Info (332146): Worst-case hold slack is 0.391
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.391         0.000 clock 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -39.380 clock 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.411
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.411       -11.192 clock 
Info (332146): Worst-case hold slack is 0.215
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.215         0.000 clock 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -39.380 clock 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 32-bit TimeQuest Timing Analyzer was successful. 0 errors, 3 warnings
    Info: Peak virtual memory: 335 megabytes
    Info: Processing ended: Thu Nov 30 19:02:54 2023
    Info: Elapsed time: 00:00:05
    Info: Total CPU time (on all processors): 00:00:01


